#!/usr/bin/env bash

# reference: https://github.com/anishathalye/dotfiles
# reference: https://github.com/dhruvmanila/dotfiles

# declare integer
declare -i exitcode
exitcode=0

# # dotfiles directory
# declare DOTFILES_DIRECTORY="${HOME}/dotfiles"
# declare DOTFILES_TARBALL_PATH="https://github.com/MarkHershey/dotfiles/tarball/master"
# declare DOTFILES_GIT_REMOTE="https://github.com/MarkHershey/dotfiles.git"

# define colors
green=$(tput setaf 2)
blue=$(tput setaf 4)
normal=$(tput sgr0)

# Header logging
function p_header {
    printf "\n${blue}%s${normal}\n--------------------------------\n" "$@"
}

# Success logging
function p_success {
    printf "${green}âœ“ %s${normal}\n\n" "$@"
}


# ----------------------------------------------------
# zsh 

p_header "Install wget zsh vim git tmux etc..."
{ sudo apt-get remove --assume-yes vim-tiny && \
sudo apt-get update && \
sudo apt-get install -y --no-install-recommends \
wget \
zsh \
vim \
git \
tmux \
tree \
make \
build-essential; } || { echo "Failed" >&2;exit 1; }
p_success "Done"


# ----------------------------------------------------
# default shell

p_header "Change default shell to zsh"
# { chsh -s "$(which zsh)" && echo "$SHELL"; } || { echo "Failed" >&2;exit 1; }
{ sudo chsh $USER -s $(which zsh) && echo "$SHELL"; } || { echo "Failed" >&2;exit 1; }
p_success "Done"

# ----------------------------------------------------
# Oh My ZSH

p_header "Install Oh My ZSH"
sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended || { echo "Failed" >&2;exit 1; }
p_success "Done"

# ----------------------------------------------------
# Zsh Syntax Highlighting

p_header "Install Zsh Syntax Highlighting"
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${HOME}/.oh-my-zsh/plugins/zsh-syntax-highlighting" || { echo "Failed" >&2;exit 1; }
p_success "Done"

# ----------------------------------------------------
# Zsh Syntax Highlighting

p_header "Install Powerlevel 10k"
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${HOME}/.oh-my-zsh/themes/powerlevel10k" || { echo "Failed" >&2;exit 1; }
p_success "Done"


# ----------------------------------------------------
# get base directory
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# vim
p_header "Linking .vimrc"
ln -s "${BASEDIR}/vimrc/vimrc" ~/.vimrc || { echo "Failed" >&2;exit 1; }
p_success "Done"

p_header "Linking .vim"
ln -s "${BASEDIR}/vim/" ~/.vim || { echo "Failed" >&2;exit 1; }
p_success "Done"

# zsh
p_header "Linking .zshrc"
if [ -f ~/.zshrc ]; then
    # shellcheck disable=SC2088
    echo "~/.zshrc exists, backing it up before overwriting."
    mv ~/.zshrc ~/.zshrc.backup
fi
ln -s "${BASEDIR}/zsh/zshrc" ~/.zshrc || { echo "Failed" >&2;exit 1; }
p_success "Done"

# p10k
p_header "Linking .p10k.zsh"
ln -s "${BASEDIR}/p10k/p10k.zsh" ~/.p10k.zsh || { echo "Failed" >&2;exit 1; }
p_success "Done"

# tmux
p_header "Linking .tmux.conf"
ln -s "${BASEDIR}/tmux/tmux.conf" ~/.tmux.conf || { echo "Failed" >&2;exit 1; }
p_success "Done"

# git
# ln -s ${BASEDIR}/gitconfig ~/.gitconfig

p_success "------ All Completed ------"

# ----------------------------------------------------
exit ${exitcode}